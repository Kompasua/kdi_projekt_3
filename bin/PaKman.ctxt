#BlueJ class context
comment0.params=
comment0.target=PaKman()
comment1.params=
comment1.target=void\ reset()
comment10.params=
comment10.target=Level\ getLevel()
comment10.text=\n\ Return\ the\ current\ level.\n\ @return\ the\ current\ level\n
comment11.params=message
comment11.target=void\ pause(java.lang.String)
comment11.text=\n\ Display\ a\ message\ and\ pause\ the\ game.\n\ @param\ message\ the\ message\ to\ display\n
comment12.params=
comment12.target=void\ gameOver()
comment12.text=\n\ Display\ a\ game\ over\ message\ and\ pause\ the\ game.\n
comment13.params=
comment13.target=void\ levelDone()
comment13.text=\n\ Display\ a\ next\ level\ message\ and\ pause\ the\ game.\n
comment14.params=
comment14.target=void\ levelFail()
comment14.text=\n\ Display\ a\ you\ died\ message\ and\ pause\ the\ game.\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment16.params=
comment16.target=void\ checkCollision()
comment16.text=\n\ Check\ whether\ pakman\ and\ a\ ghost\ collide.\n\ If\ so,\ call\ the\ collide()\ method.\n
comment17.params=event
comment17.target=boolean\ keyPressed(java.awt.event.KeyEvent)
comment17.text=KeyListener\ method\ (no\ function\ for\ us)
comment18.params=event
comment18.target=boolean\ keyReleased(java.awt.event.KeyEvent)
comment18.text=\n\ KeyListener\ method.\n\ Here\ we\ act\ on\ the\ (press\ and)\ release\ of\ keys.\n\ Currently\ implemented\:\n\ f\ toggles\ hunting/fleeing\ mode.\n
comment2.params=
comment2.target=void\ toggleHunting()
comment2.text=\n\ Toggle\ hunting/fleeing\ mode.\n
comment3.params=level
comment3.target=void\ setupLevel(Level)
comment3.text=\n\ Setup\ the\ given\ level\:\n\ <ul>\n\ \ <li>\ draw\ the\ maze;\ </li>\n\ \ <li>\ put\ pakman\ at\ its\ starting\ position;\ </li>\n\ \ <li>\ create\ the\ ghost(s)\ at\ their\ starting\ positions;\ </li>\n\ \ <li>\ initializes\ internae</li>\n\ </ul>\n
comment4.params=pac\ other
comment4.target=int\ collide(ch.aplu.jgamegrid.Actor,\ ch.aplu.jgamegrid.Actor)
comment4.text=\n\ Called\ with\ pac\ \=\=\ pacActor\ when\ pacActor\ and\ some\ other\ actor\ are\ at\ the\ same\ location.\n\ @return\ 0\n
comment5.params=
comment5.target=ch.aplu.jgamegrid.Actor\ getRandy()
comment5.text=\n\ Return\ some\ ghost\ of\ type\ Randy.\ For\ testing\ purposes\ only\n
comment6.params=
comment6.target=ch.aplu.jgamegrid.Actor\ getSilly()
comment6.text=\n\ Return\ some\ ghost\ of\ type\ Silly.\n
comment7.params=
comment7.target=ch.aplu.jgamegrid.Actor\ getTracy()
comment7.text=\n\ Return\ some\ ghost\ of\ type\ Tracy.\n
comment8.params=
comment8.target=ch.aplu.jgamegrid.Location\ wherePakman()
comment8.text=\n\ Return\ PaKman's\ location.\n\ @returns\ pakman's\ location\n
comment9.params=player\ score\ lives
comment9.target=void\ displayScore(int,\ int,\ int)
comment9.text=\n\ Displays\ the\ given\ score\ string,\ e.g\:\ "Player\ 1\:\ 500"\n\ @param\ player\ the\ player\ number\ (currently\ ignored)\n\ @param\ score\ the\ score\ of\ this\ player\n\ @param\ lives\ the\ number\ of\ lives\ of\ this\ player\n
numComments=19
